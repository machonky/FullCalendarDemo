@page
@using Microsoft.AspNetCore.Antiforgery
@model FullCalendarDemo.Pages.CalendarModel
@inject IAntiforgery antiforgery
@{
    var token = antiforgery.GetAndStoreTokens(HttpContext).RequestToken;
}
@{
    ViewData["Title"] = "Business Days Calendar";
}

<h1>Business Days Calendar</h1>

<div id='calendar'></div>

<script>

    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');
        var calendar = new FullCalendar.Calendar(calendarEl, {
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'dayGridMonth,multiMonthYear'
            },
            initialView: 'dayGridMonth',
            //initialView: 'multiMonthYear',
            editable: false, // Don't allow to modify events on the UI
            selectable: true, // Allow multiple selection of dates
            events: requestEventsAjax,
            select: selectAjaxCallback
        });

        function requestEventsAjax(fetchInfo, successCallback, failureCallback) {
            // Get the start and end dates of the visible date range
            var startDate = fetchInfo.start.toISOString();
            var endDate = fetchInfo.end.toISOString();

            fetch(`/Calendar?handler=BusinessDays&start=${startDate}&end=${endDate}`)
                .then(response => response.json())
                .then(data => {
                    successCallback(data);
                })
                .catch(error => {
                    failureCallback(error);
                });
        };

        function selectAjaxCallback(info) {
            var startDate = info.startStr;
            var endDate = info.endStr;

            fetch('/Calendar?handler=SelectedEvents', {
                method: 'post',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': '@token'
                },
                body: JSON.stringify({ startDate: startDate, endDate: endDate })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Refetch the events and rerender the calendar
                    calendar.refetchEvents();
                }
            })
            .catch(error => {
                // Handle any errors
                console.error('Error:', error);
            });
        };

        calendar.render();
    });

</script>


